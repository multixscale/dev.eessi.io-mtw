# easyconfig file for waLBerla v6.1
easyblock = 'CMakeMakeCp'

name = 'mtw'
version = '6.1'
versionsuffix = '-%(software_commit)s'

homepage = "https://walberla.net/index.html"
description = """Widely applicable Lattics-Boltzmann from Erlangen is a
block-structured high-performance framework for multiphysics simulations"""

toolchain = {'name': 'foss', 'version': '2023b'}
toolchainopts = {'usempi': True, 'pic': True}

sources = [
{
    'source_urls': ['https://i10git.cs.fau.de/api/v4/projects/walberla%2Fwalberla/repository/archive?sha='],
    'download_filename': '%(software_commit)s',
    'filename': '%(software_commit)s.tar.gz',
},
]
patches = [
    'waLBerla-6.1-fix-missing-cstint.patch',
]

builddependencies = [
    ('CMake', '3.27.6'), 
    ('Cython', '3.0.10'),
    ('Meson', '1.2.3'),
    ('meson-python', '0.15.0'),
]

dependencies = [
    ('Boost.MPI', '1.83.0'),
    ('Python', '3.11.5'),
    ('pystencils', '1.3.4'),
    ('lbmpy', '1.3.7'),
    ('py-cpuinfo', '9.0.0'),
]
	
exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'source_urls': [PYPI_SOURCE],
    'download_dep_fail': True,
    'sanity_pip_check': True,
    'buildopts': '',
}

exts_list = [
    ('numpy', '1.26.2', {
        'patches': [
            'numpy-1.22.3_disable-broken-override-test.patch',
            ('numpy-1.25.1_fix-duplicate-avx512-symbols.patch', 'numpy/core/src/npysort/x86-simd-sort'),
            'numpy-1.25.1_fix-undefined-avx512-reference.patch',
            'numpy-1.25.1_fix-test_features.patch',
        ],
        'checksums': [
            {'numpy-1.26.2.tar.gz': 'f65738447676ab5777f11e6bbbdb8ce11b785e105f690bc45966574816b6d3ea'},
            {'numpy-1.22.3_disable-broken-override-test.patch':
             '9c589bb073b28b25ff45eb3c63c57966aa508dd8b318d0b885b6295271e4983c'},
            {'numpy-1.25.1_fix-duplicate-avx512-symbols.patch':
             '8e32087c279b7193ae3507953480601200c9eff021819f3001d78c232c5852e6'},
            {'numpy-1.25.1_fix-undefined-avx512-reference.patch':
             'c4b66da93bf36071663f122de1ae668386cc6ab0154d21fa3e14ed7ddfe2a72c'},
            {'numpy-1.25.1_fix-test_features.patch':
             '1c05ee5d105fe2f824416dd6dd5c64ed0c1cd710a002b4e6dbfafff19203adc5'},
        ],
    }),
    ('packaging', '24.2', {
        'checksums': ['c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f'],
    }),
    ('setuptools', '80.9.0', {
        'checksums': ['f36b47402ecde768dbfafc46e8e4207b4360c654f1f3bb84475f0a28628fb19c'],
    }),
    ('jinja2', '3.1.6', {
        'checksums': ['0137fb05990d35f1275a587e9aee6d56da821fc83491a0fb838183be43f66d6d'],
    }),
]

max_parallel = 1

configopts = "-DWALBERLA_BUILD_WITH_PYTHON=OFF "
configopts += "-DWALBERLA_BUILD_SHOWCASES=OFF "
configopts += "-DWALBERLA_BUILD_WITH_CODEGEN=ON "
configopts += "-DWALBERLA_BUILD_DOC=OFF "
configopts += "-DWALBERLA_BUILD_BENCHMARKS=OFF"
configopts += "-DPython_ROOT_DIR=$EBROOTPYTHON"

buildopts = ' -C apps/benchmarks/MaterialTransport/two_way_coupling '


files_to_copy = [
    (['%(builddir)s/easybuild_obj/*'], 'build'),
    (['%(start_dir)s/src/*'], 'src'),
    (['%(start_dir)s/apps/benchmarks/MaterialTransport/two_way_coupling/benchmark3D.prm'], 'build/apps/benchmarks/MaterialTransport/two_way_coupling')
]

sanity_check_paths = {
    'files': [
        'build/src/waLBerlaDefinitions.h',
        'build/apps/benchmarks/MaterialTransport/two_way_coupling/MTW_2Way',
        'build/utilities/filterCompileCommands.py',
        'build/apps/benchmarks/MaterialTransport/two_way_coupling/benchmark3D.prm',
    ],
    'dirs': ['src', 'build/apps', 'build/tests', 'build/utilities']
}

sanity_check_commands = [
    "mkdir -p %(builddir)s && cp -r -a %(installdir)s/build/apps/benchmarks/MaterialTransport/two_way_coupling %(builddir)s/",
    "cd %(builddir)s/two_way_coupling && chmod -R u+w . && ./MTW_2Way benchmark3D.prm",
]

moduleclass = 'chem'
